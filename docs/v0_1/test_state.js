
s = new GameState(2);

s.current_player_index = 1;

s.players[0].gems = { white: 0,
    blue: 0,
    green: 0,
    red: 0,
    black: 1,
    gold: 0 };
s.players[1].gems = { white: 1,
    blue: 0,
    green: 2,
    red: 2,
    black: 1,
    gold: 1 };

s.supply_gems = { white: 3,
    blue: 4,
    green: 2,
    red: 2,
    black: 2,
    gold: 4 };

s.players[0].cards_in_hand = [new Card(3, 'green', 4, { white: 3, blue: 6, green: 3 })];
s.players[1].cards_in_hand = [new Card(2, 'blue', 2, { blue: 5 })];

s.players[0].card_colours = { white: 4,
    blue: 4,
    green: 3,
    red: 3,
    black: 2 };
s.players[1].card_colours = { white: 3,
    blue: 3,
    green: 2,
    red: 2,
    black: 1 };

s.players[0].score = 15;
s.players[1].score = 5;

s.players[0].cards_played = [new Card(1, 'black', 0, { green: 2, red: 1 }), new Card(1, "white", 0, { 'white': 3, 'blue': 1, 'green': 0, 'red': 0, 'black': 1 }), new Card(1, "blue", 0, { 'white': 1, 'blue': 0, 'green': 0, 'red': 0, 'black': 2 }), new Card(1, "red", 0, { 'white': 2, 'blue': 1, 'green': 1, 'red': 0, 'black': 1 }), new Card(1, "white", 0, { 'white': 0, 'blue': 0, 'green': 0, 'red': 2, 'black': 1 }), new Card(2, "green", 1, { 'white': 2, 'blue': 3, 'green': 0, 'red': 0, 'black': 2 }), new Card(1, "red", 1, { 'white': 4, 'blue': 0, 'green': 0, 'red': 0, 'black': 0 }), new Card(1, "black", 0, { 'white': 2, 'blue': 0, 'green': 2, 'red': 0, 'black': 0 }), new Card(1, "blue", 1, { 'white': 0, 'blue': 0, 'green': 0, 'red': 4, 'black': 0 }), new Card(1, "green", 0, { 'white': 0, 'blue': 2, 'green': 0, 'red': 2, 'black': 0 }), new Card(1, "red", 0, { 'white': 2, 'blue': 0, 'green': 1, 'red': 0, 'black': 2 }), new Card(1, "green", 0, { 'white': 1, 'blue': 1, 'green': 0, 'red': 1, 'black': 2 }), new Card(2, "blue", 1, { 'white': 0, 'blue': 2, 'green': 3, 'red': 0, 'black': 3 }), new Card(2, "white", 1, { 'white': 2, 'blue': 3, 'green': 0, 'red': 3, 'black': 0 }), new Card(1, "white", 1, { 'white': 0, 'blue': 0, 'green': 4, 'red': 0, 'black': 0 }), new Card(2, "blue", 3, { 'white': 0, 'blue': 6, 'green': 0, 'red': 0, 'black': 0 })];

s.players[1].cards_played = [new Card(1, "white", 0, { 'white': 0, 'blue': 2, 'green': 2, 'red': 0, 'black': 1 }), new Card(1, "blue", 0, { 'white': 1, 'blue': 0, 'green': 1, 'red': 1, 'black': 1 }), new Card(2, "green", 2, { 'white': 4, 'blue': 2, 'green': 0, 'red': 0, 'black': 1 }), new Card(1, "red", 0, { 'white': 1, 'blue': 1, 'green': 1, 'red': 0, 'black': 1 }), new Card(1, "black", 0, { 'white': 0, 'blue': 0, 'green': 1, 'red': 3, 'black': 1 }), new Card(1, "white", 0, { 'white': 0, 'blue': 3, 'green': 0, 'red': 0, 'black': 0 }), new Card(1, "red", 0, { 'white': 1, 'blue': 0, 'green': 0, 'red': 1, 'black': 3 }), new Card(1, "green", 0, { 'white': 0, 'blue': 0, 'green': 0, 'red': 3, 'black': 0 }), new Card(2, "blue", 1, { 'white': 0, 'blue': 2, 'green': 2, 'red': 3, 'black': 0 }), new Card(2, "blue", 2, { 'white': 5, 'blue': 3, 'green': 0, 'red': 0, 'black': 0 }), new Card(1, "white", 0, { 'white': 0, 'blue': 1, 'green': 2, 'red': 1, 'black': 1 })];

s.players[0].nobles = [new Noble({ white: 3, blue: 3, green: 3 }), new Noble({ white: 4, blue: 4 }, 3)];

s.nobles = [new Noble({ red: 4, black: 4 }, 3)];

s.cards_in_market[1] = [new Card(1, 'blue', 0, { 'white': 1, 'blue': 0, 'green': 1, 'red': 2, 'black': 1 }), new Card(1, 'green', 0, { 'white': 1, 'blue': 3, 'green': 1, 'red': 0, 'black': 0 }), new Card(1, 'red', 0, { 'white': 2, 'blue': 0, 'green': 0, 'red': 2, 'black': 0 }), new Card(1, 'green', 1, { 'white': 0, 'blue': 0, 'green': 0, 'red': 0, 'black': 4 })];
s.cards_in_market[2] = [new Card(2, 'black', 1, { 'white': 3, 'blue': 0, 'green': 3, 'red': 0, 'black': 2 }), new Card(2, 'red', 2, { 'white': 0, 'blue': 0, 'green': 0, 'red': 0, 'black': 5 }), new Card(2, 'green', 2, { 'white': 0, 'blue': 5, 'green': 3, 'red': 0, 'black': 0 }), new Card(2, 'green', 3, { 'white': 0, 'blue': 0, 'green': 6, 'red': 0, 'black': 0 })];
s.cards_in_market[3] = [new Card(3, 'white', 3, { 'white': 0, 'blue': 3, 'green': 3, 'red': 5, 'black': 3 }), new Card(3, 'green', 3, { 'white': 5, 'blue': 3, 'green': 0, 'red': 3, 'black': 3 }), new Card(3, 'black', 3, { 'white': 3, 'blue': 3, 'green': 5, 'red': 3, 'black': 0 }), new Card(3, 'red', 5, { 'white': 0, 'blue': 0, 'green': 7, 'red': 3, 'black': 0 })];

v0 = state_vector(s, 0);
v1 = state_vector(s, 1);

s_copy = s.copy();
v0_copy = state_vector(s_copy, 0);
v1_copy = state_vector(s_copy, 1);

v0_python = [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1];
v1_python = [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1];

for (let i = 0; i < v0.length; i++) {
    if (v0[i] != v0_python[i]) {
        console.log('v0 mismatch at', i);
    }
    if (v1[i] != v1_python[i]) {
        console.log('v1 mismatch at', i);
    }

    if (v0[i] != v0_copy[i]) {
        console.log('v0 copy mismatch at', i);
    }

    if (v1[i] != v1_copy[i]) {
        console.log('v1 copy mismatch at', i);
    }
}

console.log('Tested state');