#:import colours_dict data.colours_dict
#:import border_colours_dict data.border_colours_dict

<Label>:
    color: 0, 0, 0, 1

<Card>:
    size_hint_x: None
    width: 0.66 * self.height
    id: card
    colour_list: colours_dict[self.colour]
    canvas.before:
        # Color:
        #     rgba: 0.6, 0.6, 0.6, 1
        # Rectangle:
        #     pos: self.pos
        #     size: self.size
        Color:
            rgba: root.colour_list
        RoundedRectangle:
            pos: self.x + dp(5), self.y
            size: self.width - dp(10), self.height
            radius: [dp(10) for _ in range(4)]
        Color:
            rgba: 0.1, 0.1, 0.1, 1
        Line:
            rounded_rectangle: [self.x + dp(5), self.y, self.width - dp(10), self.height, dp(10)]
            width: 1.3
        Color:
            rgba: 0.5, 0.2, 0.8, root.selected
        Line:
            rounded_rectangle: [self.x + dp(5), self.y, self.width - dp(10), self.height, dp(10)]
            width: 0.05 * self.width
                

    GridLayout:
        pos_hint: {'x': dp(6) / self.width, 'y': 0}
        size_hint_x: None
        width: root.height / 5.5
        cols: 1
        Widget:
        NumberCircle:
            number: root.white
            hide_zeros: True
            colour: 'white'
            padding: dp(2)
        NumberCircle:
            number: root.blue
            hide_zeros: True
            colour: 'blue'
            padding: dp(2)
        NumberCircle:
            number: root.green
            hide_zeros: True
            colour: 'green'
            padding: dp(2)
        NumberCircle:
            number: root.red
            hide_zeros: True
            colour: 'red'
            padding: dp(2)
        NumberCircle:
            number: root.black
            hide_zeros: True
            colour: 'black'
            padding: dp(2)
    Label:
        text: str(root.points)
        pos_hint: {'x': 0.53, 'y': 0.6}
        size_hint_y: None
        size_hint_x: 0.4
        height: 0.4 * root.height
        font_size: 0.8 * self.height

<NumberCircle>:
    font_size: 0.8 * self.height
    text: str(self.number)
    size_hint_y: None
    height: self.width if not self.hidden else 0
    opacity: 0 if self.hidden else 1
    hidden: True if (self.hide_zeros and self.number == 0) else False
    bg_colour: colours_dict[self.colour]
    border_colour: border_colours_dict[self.colour]
    canvas.before:
        Color:
            rgba: root.bg_colour
        Ellipse:
            pos: self.x + self.padding, self.y + self.padding
            size: self.width - 2 * self.padding, self.height - 2 * self.padding
        Color:
            rgba: root.border_colour
        Line:
            ellipse: self.x + self.padding, self.y + self.padding, self.width - 2*self.padding, self.height - 2*self.padding
            width: self.width / 30.

<NumberCircleWithCard>:
    Label:
        pos: root.x + root.width * 0.7, root.y
        size: root.width * 0.3, root.height * 0.45
        text: str(root.card_number)
        font_size: 0.8 * self.height
        opacity: 1 if root.show_card_number else 0
        canvas.before:
            Color:
                rgba: root.bg_colour
            Rectangle:
                pos: self.pos
                size: self.size
            Color:
                rgba: root.border_colour
            Line:
                rounded_rectangle: [self.x, self.y, self.width, self.height, 0]
                width: root.width / 40.

<MenuScreen>:
    name: 'menu'
    BoxLayout:
        orientation: 'vertical'
        Label:
            text: 'AI'
            size_hint_y: None
            height: self.texture_size[1] + dp(40)
        Button:
            text: 'play'
            on_release: root.manager.current = 'game'

<CardsDisplay>:
    BoxLayout:
        size_hint_y: None
        height: 0.95 * root.height
        Widget:
        Label:
            text: root.label + (':' if root.label else '')
            size_hint_x: None
            width: 1.5 * self.texture_size[0]
            font_size: 0.3 * self.height
        BoxLayout:
            id: boxlayout
            size_hint_x: None
            width: self.minimum_width
        Widget:

<GemColourChooser>:
    Label:
        text: str(root.change)
        font_size: 0.7 * self.height
        canvas.before:
            Color:
                rgba: colours_dict[root.colour]
            Rectangle:
                pos: self.pos
                size: self.size
    Button:
        id: plus_button
        text: '+'
        on_release: root.change_by(1)
        background_color: border_colours_dict[root.colour]
        size_hint_x: None
        width: 4 * self.texture_size[0]
        color: 1, 1, 1, 1
    Button:
        text: '-'
        on_release: root.change_by(-1)
        background_color: border_colours_dict[root.colour]
        size_hint_x: None
        width: 4 * plus_button.texture_size[0]
        color: 1, 1, 1, 1
                
<GemsChooser>:
    white_change: white.change
    blue_change: blue.change
    green_change: green.change
    red_change: red.change
    black_change: black.change
    gold_change: gold.change
    GemColourChooser:
        id: white
        colour: 'white'
    GemColourChooser:
        id: blue
        colour: 'blue'
    GemColourChooser:
        id: green
        colour: 'green'
    GemColourChooser:
        id: red
        colour: 'red'
    GemColourChooser:
        id: black
        colour: 'black'
    GemColourChooser:
        id: gold
        colour: 'gold'

<GemsDisplay>:
    BoxLayout:
        id: bl
        size_hint_y: None
        height: 0.95 * root.height
        Widget:
        NumberCircleWithCard:
            size_hint_x: None
            width: bl.height
            number: root.white
            card_number: root.white_cards
            colour: 'white'
            show_card_number: root.show_card_number
        Widget:
            size_hint_x: None
            width: dp(10)
        NumberCircleWithCard:
            size_hint_x: None
            width: bl.height
            number: root.blue
            card_number: root.blue_cards
            colour: 'blue'
            show_card_number: root.show_card_number
        Widget:
            size_hint_x: None
            width: dp(10)
        NumberCircleWithCard:
            size_hint_x: None
            width: bl.height
            number: root.green
            card_number: root.green_cards
            colour: 'green'
            show_card_number: root.show_card_number
        Widget:
            size_hint_x: None
            width: dp(10)
        NumberCircleWithCard:
            size_hint_x: None
            width: bl.height
            number: root.red
            card_number: root.red_cards
            colour: 'red'
            show_card_number: root.show_card_number
        Widget:
            size_hint_x: None
            width: dp(10)
        NumberCircleWithCard:
            size_hint_x: None
            width: bl.height
            number: root.black
            card_number: root.black_cards
            colour: 'black'
            show_card_number: root.show_card_number
        Widget:
            size_hint_x: None
            width: dp(10)
        NumberCircle:
            size_hint_x: None
            width: bl.height
            number: root.gold
            colour: 'gold'
        Widget:

<PlayerDisplay>:
    BoxLayout:
        size_hint_x: 0.95
        size_hint_y: 0.95
        orientation: 'horizontal'
        Label:
            text: root.name + ':'
            font_size: 0.3 * self.height
            size_hint_x: 0.15
            text_size: self.size
            halign: 'right'
            valign: 'middle'
        Widget:
            size_hint_x: 0.02
        GemsDisplay:
            white: root.white
            blue: root.blue
            green: root.green
            red: root.red
            black: root.black
            gold: root.gold
            white_cards: root.white_cards
            blue_cards: root.blue_cards
            green_cards: root.green_cards
            red_cards: root.red_cards
            black_cards: root.black_cards
            show_card_number: root.show_card_number

<GameScreen>:
    name: 'game'
    ai_autoplay: autoplay_checkbox.active
    BoxLayout:
        orientation: 'vertical'
        BoxLayout:
            orientation: 'horizontal'
            size_hint_y: None
            height: dp(40)
            Label:
                size_hint_x: None
                width: self.texture_size[0] + dp(20)
                font_size: 0.7 * self.height
                text: 'Round {} Player {}'.format(root.round_number, root.current_player_index + 1)
            Label:
                text: ', '.join(['P{}: {} points'.format(i+1, score) for i, score in enumerate(root.scores)])
                font_size: 0.7 * self.height
            Button:
                text: 'reset'
                on_release: root.reset_game()
                size_hint_x: None
                width: self.texture_size[0] + dp(20)
                background_color: (1, 0, 0, 1)
                color: 1, 1, 1, 1
        Label:
            orientation: 'horizontal'
            size_hint_y: None
            height: dp(25)
            font_size: 0.8 * self.height
            text_size: self.size
            halign: 'center'
            valign: 'middle'
            text: 'last move: ' + root.last_move_info
        Label:
            orientation: 'horizontal'
            size_hint_y: None
            height: dp(55)
            font_size: 0.30 * self.height
            markup: True
            text_size: self.size
            halign: 'center'
            valign: 'middle'
            text: root.nobles_text
        PlayerDisplay:
            size_hint_y: None
            height: dp(70)
            white: root.supply_white
            blue: root.supply_blue
            green: root.supply_green
            red: root.supply_red
            black: root.supply_black
            gold: root.supply_gold
            name: 'supply'
            show_card_number: False
        PlayerDisplay:
            size_hint_y: None
            height: dp(70)
            name: 'P2 gems'
            white: root.p2_white
            blue: root.p2_blue
            green: root.p2_green
            red: root.p2_red
            black: root.p2_black
            gold: root.p2_gold
            white_cards: root.p2_white_cards
            blue_cards: root.p2_blue_cards
            green_cards: root.p2_green_cards
            red_cards: root.p2_red_cards
            black_cards: root.p2_black_cards
        CardsDisplay:
            label: '3'
            cards: root.tier_3_cards
        CardsDisplay:
            label: '2'
            cards: root.tier_2_cards
        CardsDisplay:
            label: '1'
            cards: root.tier_1_cards
        PlayerDisplay:
            name: 'your gems'
            size_hint_y: None
            height: dp(70)
            white: root.p1_white
            blue: root.p1_blue
            green: root.p1_green
            red: root.p1_red
            black: root.p1_black
            gold: root.p1_gold
            white_cards: root.p1_white_cards
            blue_cards: root.p1_blue_cards
            green_cards: root.p1_green_cards
            red_cards: root.p1_red_cards
            black_cards: root.p1_black_cards
        BoxLayout:
            size_hint_y: 0.7
            orientation: 'horizontal'
            id: bl2
            Label:
                text: root.current_value_text
                size_hint_x: None
                width: max(self.texture_size[0] + dp(10), bl2.width / 3.)
            CardsDisplay:
                label: ''
                cards: root.player_hand_cards
        BoxLayout:
            orientation: 'horizontal'
            size_hint_y: None
            height: dp(30)
            Button:
                text: 'buy card'
                on_release: pass
                color: 1, 1, 1, 1
                on_release: root.buy_selected_card()
                disabled: not root.can_buy_selected
            Button:
                text: 'reserve card'
                on_release: pass
                color: 1, 1, 1, 1
                on_release: root.reserve_selected_card()
                disabled: not root.can_reserve_selected
        GemsChooser:
            id: gems_chooser
            size_hint_y: None
            height: dp(40)
            white_available: root.supply_white
            blue_available: root.supply_blue
            green_available: root.supply_green
            red_available: root.supply_red
            black_available: root.supply_black
            gold_available: root.supply_gold
        BoxLayout:
            orientation: 'horizontal'
            size_hint_y: None
            height: dp(30)
            Button:
                text: 'take gems'
                on_release: root.take_gems()
                color: 1, 1, 1, 1
            Button:
                text: 'AI move'
                on_release: root.do_ai_move()
                color: 1, 1, 1, 1
                disabled: any([score >= 15 for score in root.scores])
            CheckBox:
                active: True
                size_hint_x: None
                width: 1.5 * self.height
                id: autoplay_checkbox


    

    

<Root>:
    gamescreen: gs
    # MenuScreen:
    GameScreen:
        id: gs
            

